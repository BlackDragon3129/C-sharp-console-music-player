//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleMusicPlayer {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Localization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Localization() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ConsoleMusicPlayer.Properties.Localization", typeof(Localization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на has been added to playlist.
        /// </summary>
        internal static string AddedToPlaylist {
            get {
                return ResourceManager.GetString("AddedToPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на and.
        /// </summary>
        internal static string And {
            get {
                return ResourceManager.GetString("And", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &apos;s base path.
        /// </summary>
        internal static string BasePath {
            get {
                return ResourceManager.GetString("BasePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Current playlist:.
        /// </summary>
        internal static string CurrentPlaylist {
            get {
                return ResourceManager.GetString("CurrentPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на does not exist!.
        /// </summary>
        internal static string DoesNotExist {
            get {
                return ResourceManager.GetString("DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter playlist&apos;s base path:.
        /// </summary>
        internal static string EnterBasePath {
            get {
                return ResourceManager.GetString("EnterBasePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter the command:.
        /// </summary>
        internal static string EnterCommand {
            get {
                return ResourceManager.GetString("EnterCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter playlist&apos;s new name:.
        /// </summary>
        internal static string EnterNewPlaylistName {
            get {
                return ResourceManager.GetString("EnterNewPlaylistName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Enter playlist&apos;s name:.
        /// </summary>
        internal static string EnterPlaylistName {
            get {
                return ResourceManager.GetString("EnterPlaylistName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Everything is ready!.
        /// </summary>
        internal static string EverythingReady {
            get {
                return ResourceManager.GetString("EverythingReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading featured playlist....
        /// </summary>
        internal static string FeaturedPlaylistLoad {
            get {
                return ResourceManager.GetString("FeaturedPlaylistLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на was featured successfully!.
        /// </summary>
        internal static string FeaturedSuccessfully {
            get {
                return ResourceManager.GetString("FeaturedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hi.
        /// </summary>
        internal static string Hi {
            get {
                return ResourceManager.GetString("Hi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to load songs from the base path? (yes/no).
        /// </summary>
        internal static string LoadSongsFromBasePath {
            get {
                return ResourceManager.GetString("LoadSongsFromBasePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You cannot delete main and featured playlists!.
        /// </summary>
        internal static string MainOrFeatureDelete {
            get {
                return ResourceManager.GetString("MainOrFeatureDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading main playlist....
        /// </summary>
        internal static string MainPlaylistLoad {
            get {
                return ResourceManager.GetString("MainPlaylistLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mixer&apos;s volume now is.
        /// </summary>
        internal static string MixerVolume {
            get {
                return ResourceManager.GetString("MixerVolume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на - file is already in the playlist (for add), file is not in the playlist (for remove), has wrong extension or does not exist.
        /// </summary>
        internal static string Not_ToPlaylistExplain {
            get {
                return ResourceManager.GetString("Not_ToPlaylistExplain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на has not been added to playlist.
        /// </summary>
        internal static string NotAddedToPlaylist {
            get {
                return ResourceManager.GetString("NotAddedToPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на has not been removed from.
        /// </summary>
        internal static string NotRemovedFromPlaylist {
            get {
                return ResourceManager.GetString("NotRemovedFromPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на One of the songs not found!.
        /// </summary>
        internal static string OneSongNotFound {
            get {
                return ResourceManager.GetString("OneSongNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path.
        /// </summary>
        internal static string Path {
            get {
                return ResourceManager.GetString("Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на is playing now..
        /// </summary>
        internal static string PlayingNow {
            get {
                return ResourceManager.GetString("PlayingNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Playlist.
        /// </summary>
        internal static string Playlist {
            get {
                return ResourceManager.GetString("Playlist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на has been created successfully!.
        /// </summary>
        internal static string PlaylistCreated {
            get {
                return ResourceManager.GetString("PlaylistCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на currently exists!.
        /// </summary>
        internal static string PlaylistCurrentlyExists {
            get {
                return ResourceManager.GetString("PlaylistCurrentlyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на was deleted successfully!.
        /// </summary>
        internal static string PlaylistDeleted {
            get {
                return ResourceManager.GetString("PlaylistDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на was loaded successfully!.
        /// </summary>
        internal static string PlaylistLoadedSuccessfully {
            get {
                return ResourceManager.GetString("PlaylistLoadedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на not found!.
        /// </summary>
        internal static string PlaylistNotFound {
            get {
                return ResourceManager.GetString("PlaylistNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Playlist&apos;s base path changed to.
        /// </summary>
        internal static string PlaylistPathChanged {
            get {
                return ResourceManager.GetString("PlaylistPathChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на was renamed to.
        /// </summary>
        internal static string PlaylistRenamed {
            get {
                return ResourceManager.GetString("PlaylistRenamed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading other playlists....
        /// </summary>
        internal static string PlaylistsLoad {
            get {
                return ResourceManager.GetString("PlaylistsLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Creating a queue....
        /// </summary>
        internal static string QueueCreate {
            get {
                return ResourceManager.GetString("QueueCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Creating and shuffling a queue....
        /// </summary>
        internal static string QueueCreateAndShuffle {
            get {
                return ResourceManager.GetString("QueueCreateAndShuffle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Queue was shuffled!.
        /// </summary>
        internal static string QueueShuffled {
            get {
                return ResourceManager.GetString("QueueShuffled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reloaded successfully!.
        /// </summary>
        internal static string Reloaded {
            get {
                return ResourceManager.GetString("Reloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reloaded and shuffled successfully!.
        /// </summary>
        internal static string ReloadedAndShuffled {
            get {
                return ResourceManager.GetString("ReloadedAndShuffled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на has been removed from playlist.
        /// </summary>
        internal static string RemovedFromPlaylist {
            get {
                return ResourceManager.GetString("RemovedFromPlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на were replaced successfully!.
        /// </summary>
        internal static string ReplacedSuccessfully {
            get {
                return ResourceManager.GetString("ReplacedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading settings....
        /// </summary>
        internal static string SettingsLoad {
            get {
                return ResourceManager.GetString("SettingsLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на not found!.
        /// </summary>
        internal static string SongNotFound {
            get {
                return ResourceManager.GetString("SongNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Songs from.
        /// </summary>
        internal static string SongsFrom {
            get {
                return ResourceManager.GetString("SongsFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на was loaded successfully!.
        /// </summary>
        internal static string SongsLoadedSuccessfully {
            get {
                return ResourceManager.GetString("SongsLoadedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Song with index.
        /// </summary>
        internal static string SongWithIndex {
            get {
                return ResourceManager.GetString("SongWithIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на successfully.
        /// </summary>
        internal static string Successfully {
            get {
                return ResourceManager.GetString("Successfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Are you sure to delete playlist.
        /// </summary>
        internal static string SureToDeletePlaylist {
            get {
                return ResourceManager.GetString("SureToDeletePlaylist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type &quot;help&quot; to see the instruction and &quot;settings&quot; to open the settings..
        /// </summary>
        internal static string TypeHelp {
            get {
                return ResourceManager.GetString("TypeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please, visit my GitHub: https://github.com/BlackDragon3129 (you can type github).
        /// </summary>
        internal static string VisitGithub {
            get {
                return ResourceManager.GetString("VisitGithub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на is already featured or does not exist!.
        /// </summary>
        internal static string WasNotFeatured {
            get {
                return ResourceManager.GetString("WasNotFeatured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Write song&apos;s path!.
        /// </summary>
        internal static string WriteSongPath {
            get {
                return ResourceManager.GetString("WriteSongPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong command!.
        /// </summary>
        internal static string WrongCommand {
            get {
                return ResourceManager.GetString("WrongCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong index!.
        /// </summary>
        internal static string WrongIndex {
            get {
                return ResourceManager.GetString("WrongIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong playlist&apos;s name! You need type playlist&apos;s name or index..
        /// </summary>
        internal static string WrongPlaylistName {
            get {
                return ResourceManager.GetString("WrongPlaylistName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong value after the command! It must be a number!.
        /// </summary>
        internal static string WrongValueNeedNumber {
            get {
                return ResourceManager.GetString("WrongValueNeedNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (yes/no).
        /// </summary>
        internal static string YesNo {
            get {
                return ResourceManager.GetString("YesNo", resourceCulture);
            }
        }

        internal static string VisitGitHub { get => 
                ResourceManager.GetString("VisitGithub", resourceCulture); }
    }
}
